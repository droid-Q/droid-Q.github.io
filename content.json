{"meta":{"title":"GU.DEV","subtitle":null,"description":null,"author":"Droid","url":"https://gujiaqi.dev","root":"/"},"pages":[{"title":"","date":"2021-01-22T09:46:04.721Z","updated":"2021-01-22T09:46:04.721Z","comments":true,"path":"about/index.html","permalink":"https://gujiaqi.dev/about/index.html","excerpt":"","text":"基本资料 -姓名: ? -出生年月：1989年09月 -籍贯：嘉兴市 -学历：本科 -求职意向: Java开发 联系方式 -邮箱：droidqw@gmail.com -博客：https://gujiaqi.dev -github：https://github.com/droid-Q 专业技能 TODO 项目经验 TODO"}],"posts":[{"title":"spring gateway 二次url encode 问题","slug":"spring-gateway-二次url-encode-问题","date":"2020-04-09T16:08:24.000Z","updated":"2021-01-22T09:46:04.721Z","comments":true,"path":"2020/04/09/spring-gateway-二次url-encode-问题/","link":"","permalink":"https://gujiaqi.dev/2020/04/09/spring-gateway-%E4%BA%8C%E6%AC%A1url-encode-%E9%97%AE%E9%A2%98/","excerpt":"","text":"spring gateway issues spring gateway 转发业务系统请求时遇到了url encoded again的问题，将work around 放到filter order 最后一个 work around： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566public class FixUrlEncodingFilter implements GlobalFilter, Ordered &#123; public final Map&lt;String,String&gt; blackList= new HashMap&lt;String,String&gt;()&#123;&#123; put(&quot;\\\\[&quot;, &quot;%5b&quot;); put(&quot;]&quot;, &quot;%5d&quot;); &#125;&#125;; @Override public Mono&lt;Void&gt; filter(final ServerWebExchange exchange, final GatewayFilterChain chain) &#123; URI uri = exchange.getRequest().getURI(); boolean encoded = containsEncodedParts(uri); if (!encoded) &#123; uri = alreadyEncodedUri(exchange); &#125; return chain.filter(exchange.mutate().request(exchange.getRequest().mutate().uri(uri).build()).build()); &#125; private URI alreadyEncodedUri(final ServerWebExchange exchange) &#123; final MultiValueMap&lt;String, String&gt; escapedParameters = queryParamsEscaped(exchange); final URI original = exchange.getRequest().getURI(); UriComponentsBuilder uriBuilder = UriComponentsBuilder.newInstance() .scheme(original.getScheme()) .host(original.getHost()) .port(original.getPort()) .path(original.getPath()); if (escapedParameters != null &amp;&amp; escapedParameters.size() &gt; 0) &#123; uriBuilder = uriBuilder.queryParams(escapedParameters); &#125; return uriBuilder.build(true).toUri(); &#125; private MultiValueMap&lt;String, String&gt; queryParamsEscaped(final ServerWebExchange exchange) &#123; final MultiValueMap&lt;String, String&gt; parameters = exchange.getRequest().getQueryParams(); final MultiValueMap&lt;String, String&gt; escapedParameters = new LinkedMultiValueMap&lt;&gt;(); if (parameters != null) &#123; parameters.entrySet().forEach(entry -&gt; &#123; final List&lt;String&gt; escapedValues = new ArrayList&lt;&gt;(); final String escapedKey = escape(entry.getKey()); entry.getValue().forEach(value -&gt; &#123; escapedValues.add(escape(value)); &#125;); escapedParameters.put(escapedKey, escapedValues); &#125;); &#125; return escapedParameters; &#125; public String escape(final String value) &#123; if (value == null || value.isEmpty()) &#123; return &quot;&quot;; &#125; try &#123; final String[] temp = &#123;URLEncoder.encode(value, StandardCharsets.UTF_8.toString())&#125;; blackList.forEach((k,v)-&gt;&#123; temp[0] = temp[0].replaceAll(k, v); &#125;); return temp[0]; &#125; catch (final UnsupportedEncodingException ex) &#123; return value; &#125; &#125; @Override public int getOrder() &#123; return 10000; &#125;&#125;","categories":[{"name":"spring cloud","slug":"spring-cloud","permalink":"https://gujiaqi.dev/categories/spring-cloud/"}],"tags":[{"name":"spring cloud","slug":"spring-cloud","permalink":"https://gujiaqi.dev/tags/spring-cloud/"}]}],"categories":[{"name":"spring cloud","slug":"spring-cloud","permalink":"https://gujiaqi.dev/categories/spring-cloud/"}],"tags":[{"name":"spring cloud","slug":"spring-cloud","permalink":"https://gujiaqi.dev/tags/spring-cloud/"}]}