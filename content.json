{"pages":[{"title":"","text":"基本资料 -姓名: ? -出生年月：1989年09月 -籍贯：嘉兴市 -学历：本科 -求职意向: Java开发 联系方式 -邮箱：droidqw@gmail.com -博客：https://gujiaqi.dev -github：https://github.com/droid-Q 专业技能 TODO 项目经验 TODO","link":"/about/index.html"}],"posts":[{"title":"spring gateway 二次url encode 问题","text":"spring gateway issues spring gateway 转发业务系统请求时遇到了url encoded again的问题，将work around 放到filter order 最后一个 work around： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162public class FixUrlEncodingFilter implements GlobalFilter, Ordered { public final Map&lt;String,String&gt; blackList= new HashMap&lt;String,String&gt;(){{ put(\"\\\\[\", \"%5b\"); put(\"]\", \"%5d\"); }}; @Override public Mono&lt;Void&gt; filter(final ServerWebExchange exchange, final GatewayFilterChain chain) { final URI uri = alreadyEncodedUri(exchange); return chain.filter(exchange.mutate().request(exchange.getRequest().mutate().uri(uri).build()).build()); } private URI alreadyEncodedUri(final ServerWebExchange exchange) { final MultiValueMap&lt;String, String&gt; escapedParameters = queryParamsEscaped(exchange); final URI original = exchange.getRequest().getURI(); UriComponentsBuilder uriBuilder = UriComponentsBuilder.newInstance() .scheme(original.getScheme()) .host(original.getHost()) .port(original.getPort()) .path(original.getPath()); if (escapedParameters != null &amp;&amp; escapedParameters.size() &gt; 0) { uriBuilder = uriBuilder.queryParams(escapedParameters); } return uriBuilder.build(true).toUri(); } private MultiValueMap&lt;String, String&gt; queryParamsEscaped(final ServerWebExchange exchange) { final MultiValueMap&lt;String, String&gt; parameters = exchange.getRequest().getQueryParams(); final MultiValueMap&lt;String, String&gt; escapedParameters = new LinkedMultiValueMap&lt;&gt;(); if (parameters != null) { parameters.entrySet().forEach(entry -&gt; { final List&lt;String&gt; escapedValues = new ArrayList&lt;&gt;(); final String escapedKey = escape(entry.getKey()); entry.getValue().forEach(value -&gt; { escapedValues.add(escape(value)); }); escapedParameters.put(escapedKey, escapedValues); }); } return escapedParameters; } public String escape(final String value) { if (value == null || value.isEmpty()) { return \"\"; } try { final String[] temp = {URLEncoder.encode(value, StandardCharsets.UTF_8.toString())}; blackList.forEach((k,v)-&gt;{ temp[0] = temp[0].replaceAll(k, v); }); return temp[0]; } catch (final UnsupportedEncodingException ex) { return value; } } @Override public int getOrder() { return 10000; }}","link":"/2020/04/09/spring-gateway-%E4%BA%8C%E6%AC%A1url-encode-%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"spring cloud","slug":"spring-cloud","link":"/tags/spring-cloud/"}],"categories":[{"name":"spring cloud","slug":"spring-cloud","link":"/categories/spring-cloud/"}]}